"0","# the true positive / false positive subgroup is"
"0","# subgroup.data$rules"
"0","param <- list("
"0","  desirable_response = ""increasing"","
"0","  nsamples = 100, "
"0","  npermutations = 100, # increase the permutation in a real world study "
"0","  maxdepth = MAX_DEPTH, "
"0","  min_subgroup_n_control = SUBGROUP_MIN_SIZE/2, "
"0","  min_subgroup_n_trt = SUBGROUP_MIN_SIZE/2, "
"0","  n_cpu = 1 # increase the number of CPU cores according to your machine"
"0",")"
"0","resTSDT <- lapply(X = outcome_columns, FUN = function(y_idx) {"
"0","  res <- runTSDT(subgroup.data = subgroup.data, "
"0","                     y_idx = y_idx,"
"0","                     desirable_response = param$desirable_response,"
"0","                     nsamples = param$nsamples, "
"0","                     npermutations = param$npermutations, "
"0","                     maxdepth = param$maxdepth,"
"0","                     n_cpu = param$n_cpu)"
"0","  allRules <<- rbind(allRules, "
"0","                    parseTSDTResults(TSDT_table = res, outcome = y_idx, param = param, filter = ""Strong""))"
"0","  return(res)"
"0","})"
"1","[1]"
"1"," ""numeric"""
"1","
"
"2","the condition has length > 1 and only the first element will be used"
"2","
"
