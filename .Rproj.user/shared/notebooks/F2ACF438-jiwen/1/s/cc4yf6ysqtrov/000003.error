{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"sapply(exploreConditionalInferenceTree(subgroup.data = subgroup.data, \n    stump = FALSE, testtype = \"Bonferroni\", teststat = \"max\", \n    significance = 0.05, nmin = 0.05, maxdepth = 2), FUN = plot)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"lapply(X = X, FUN = FUN, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"exploreConditionalInferenceTree(subgroup.data = subgroup.data, \n    stump = FALSE, testtype = \"Bonferroni\", teststat = \"max\", \n    significance = 0.05, nmin = 0.05, maxdepth = 2)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"ctree(formula = y ~ ., data = data, controls = ctree_control(stump = stump, \n    teststat = teststat, testtype = testtype, nresample = nresample, \n    minsplit = minsplit, mincriterion = (1 - significance), maxdepth = maxdepth))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"dpp(conditionalTree, formula, data, subset, xtrafo = xtrafo, \n    ytrafo = ytrafo, scores = scores)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"dpp(conditionalTree, formula, data, subset, xtrafo = xtrafo, \n    ytrafo = ytrafo, scores = scores)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"model@dpp(...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"initVariableFrame(dat@get(\"input\"), trafo = xtrafo, scores = scores)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"initVariableFrame(dat@get(\"input\"), trafo = xtrafo, scores = scores)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".local(obj, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"trafo(obj)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"trafo(data = data, numeric_trafo = numeric_trafo, factor_trafo = factor_trafo, \n    ordered_trafo = ordered_trafo, surv_trafo = surv_trafo, var_trafo = var_trafo)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(\"data class \", class(x), \" is not supported\")","line_number":0}],"message":"Error in trafo(data = data, numeric_trafo = numeric_trafo, factor_trafo = factor_trafo,  : \n  data class character is not supported\n"}