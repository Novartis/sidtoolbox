"0","threshold <- -log10(P_THRESHOLD)"
"0","max_p_value <- -log10(MIN_P_VALUE)"
"0","summarizeRules <- function(subgroup.data, rules) {"
"0","  N.rules <- nrow(rules)"
"0","  summaryRules <- data.table()"
"0","  "
"0","  allOutcomes <- outcome_columns"
"0","  "
"0","  for (i in c(1:N.rules)) {"
"0","    row <- rules[i]"
"0","    # adding a fix to remove dummy rules wihch were negative controls"
"0","    if (!grepl(x = row$rule, pattern = ""dummy"")) {"
"0","      if (str_length(row$outcome) == 0) {"
"0","        Y <- allOutcomes"
"0","      } else {"
"0","        Y <- row$outcome"
"0","      }"
"0","      for (y in Y) {"
"0","        row$outcome <- y"
"0","        summaryRules <- rbind(summaryRules, row)"
"0","      }"
"0","    }"
"0","    "
"0","  }"
"0","  N.rules <- nrow(summaryRules)"
"0","  N <- nrow(subgroup.data$data)"
"0","  effect_size <- sapply("
"0","    X = c(1:N.rules),"
"0","    FUN = function(i) {"
"0","      row <- summaryRules[i]"
"0","      sbg_idx <-"
"0","        parseRule(covariates = subgroup.data, rule = row$rule)"
"0","      f <- interactionEffectSize("
"0","        subgroup.data = subgroup.data,"
"0","        y_idx = row$outcome,"
"0","        subgroup_idx = sbg_idx"
"0","      )"
"0","      c("
"0","        N_ratio = sum(sbg_idx) / N,"
"0","        effect = f[1],"
"0","        pvalue = f[2]"
"0","      )"
"0","    }"
"0","  )"
"0","  summaryRules$N_ratio <- effect_size[1, ]"
"0","  summaryRules$effect_size <- effect_size[2, ]"
"0","  summaryRules$pvalue <- effect_size[3, ]"
"0","  "
"0","  # check TP rule and get accuracy precision recall"
"0","  truth_subgroup <- which(rules$method == ""sim_TP"")"
"0","  if (length(truth_subgroup) > 0) {"
"0","    truth_subgroup <- parseRule(covariates = subgroup.data,"
"0","                                rule = rules[truth_subgroup[1], ]$rule)"
"0","    performance <- sapply("
"0","      X = c(1:N.rules),"
"0","      FUN = function(i) {"
"0","        row <- summaryRules[i, ]"
"0","        sbg_idx <-"
"0","          parseRule(covariates = subgroup.data, rule = row$rule)"
"0","        TP <- sum(sbg_idx &  truth_subgroup)"
"0","        FP <- sum(sbg_idx & !truth_subgroup)"
"0","        TN <- sum(!sbg_idx & !truth_subgroup)"
"0","        FN <- sum(!sbg_idx &  truth_subgroup)"
"0","        precision <- TP / (TP + FP)"
"0","        recall <- TP / (TP + FN)"
"0","        F1  <- 2 * (recall * precision) / (precision + recall)"
"0","        c(precision = precision,"
"0","          recall = recall,"
"0","          F1 = F1)"
"0","      }"
"0","    )"
"0","    summaryRules$precision <- performance[1, ] * 100"
"0","    summaryRules$recall <- performance[2, ] * 100"
"0","    summaryRules$F1 <- performance[3, ] * 100"
"0","  }"
"0","  return(summaryRules)"
"0","}"
"0","rules.data <- summarizeRules(subgroup.data = subgroup.data, rules = allRules)"
"2","Error in .subset2(x, i, exact = exact) : 
  attempt to select less than one element in get1index
"
